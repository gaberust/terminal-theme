@font-face {
    font-family: "JetBrains Mono";
    font-style: normal;
    font-weight: normal;
    font-display: swap;
    src: local("JetBrains Mono Regular"), url("/assets/fonts/JetBrainsMono-Regular.woff2") format('woff2');
}
@font-face {
    font-family: "JetBrains Mono";
    font-style: normal;
    font-weight: bold;
    font-display: swap;
    src: local("JetBrains Mono Bold"), url("/assets/fonts/JetBrainsMono-Bold.woff2") format('woff2');
}
@font-face {
    font-family: "JetBrains Mono";
    font-style: italic;
    font-weight: normal;
    font-display: swap;
    src: local("JetBrains Mono Italic"), url("/assets/fonts/JetBrainsMono-Italic.woff2") format('woff2');
}
/* Variable declaration */
:root {
    --line-height: 1.25em;
    --color: var(--nord5);
    --secondary-color: var(--nord3);
    --accent-color: var(--nord15);
    --link-color: var(--nord8);
    --bg-color: var(--nord0);
    --character-width: 0.6em;
    --page-width: calc(var(--character-width) * 80);
    --border-width: 1px;
}
* {
    box-sizing: border-box;
}
html {
    -webkit-text-size-adjust: 100%;
}
body {
    margin: 0;
    width: 100%;
    font-family: "JetBrains Mono", monospace;
    font-size: 15px;
    line-height: var(--line-height);
    display: flex;
    justify-content: center;
    background-color: var(--nord1);
}
/* Main class */
body > .terminal {
    background-color: var(--bg-color);
    color: var(--color);
    max-width: var(--page-width);
    min-height: 100vh;
    margin-top: 0;
    margin-bottom: 0;
    border-top: none;
    border-bottom: none;
}
.bordered > *:first-child {
    margin-top: 0;
}
.bordered > *:last-child {
    margin-bottom: 0;
}
.bordered {
    border: var(--border-width) solid var(--secondary-color);
    padding: var(--line-height) calc(var(--character-width) - var(--border-width));
    margin: var(--line-height) var(--character-width);
}
.secondary {
    color: var(--secondary-color);
}
h1,h2,h3,h4,h5,h6 {
    font-weight: bold;
    font-size: 1em;
    margin: var(--line-height) 0;
    color: var(--accent-color);
}
h1::before {
    content: "#";
    padding-right: var(--character-width);
}
h2::before {
    content: "##";
    padding-right: var(--character-width);
}
h3::before {
    content: "###";
    padding-right: var(--character-width);
}
h4::before {
    content: "####";
    padding-right: var(--character-width);
}
h5::before {
    content: "#####";
    padding-right: var(--character-width);
}
h6::before {
    content: "######";
    padding-right: var(--character-width);
}
a, a:visited {
    color: var(--link-color);
    cursor: pointer;
}
p {
    margin-top: var(--line-height);
    margin-bottom: var(--line-height);
}
ul {
    list-style: none;
    padding-left: var(--character-width);
    margin-top: var(--line-height);
    margin-bottom: var(--line-height);
}
ul > li::before {
    content: "*";
    color: var(--secondary-color);
    padding-right: var(--character-width);
}
ol {
    list-style: none;
    counter-reset: count;
    padding-left: var(--character-width);
    margin-top: var(--line-height);
    margin-bottom: var(--line-height);
}
ol > li {
    counter-increment: count;
}
ol > li::before {
    content: counter(count) ".";
    color: var(--secondary-color);
    padding-right: var(--character-width);
}
hr {
    border: none;
    margin-top: var(--line-height);
    margin-bottom: var(--line-height);
}
hr::after {
    content: "--------------------------------------------------------------------------------";
    color: var(--secondary-color);
    display: block;
    height: var(--line-height);
    overflow: hidden;
    overflow-wrap: anywhere;
}
i::before,em::before {
    content: "*";
}
i::after,em::after {
    content: "*";
}
b::before,strong::before {
    content: "**";
    font-weight: bold;
}
b::after,strong::after {
    content: "**";
    font-weight: bold;
}
blockquote {
    margin: var(--line-height) var(--character-width) var(--line-height) calc(var(--character-width) * 2);
    position: relative;
}
blockquote::before {
    /* Hacky: would prefer to have the content be repeating automatically */
    content: ">>>>>>>>>>>>>>>>>>>>>";
    color: var(--secondary-color);
    display: block;
    left: calc(var(--character-width) * -2);
    position: absolute;
    max-width: var(--character-width);
    overflow-wrap: break-word;
    overflow: hidden;
    height: 100%;
}
img {
    max-width: 100%;
    height: auto;
    vertical-align: top;
}
@media only screen and (max-width: 700px) {
    body {
        font-size: 14px;
    }

    .terminal {
        margin: 0;
        border: none;
        width: 100vw;
    }
}

/* Ghost-theme specific */

.author::after {
    content: ", ";
}
.author:last-child::after {
    content: none;
}
.author:nth-last-child(2)::after {
    content: " & ";
}

.publish-date {
    float: right;
}

.primary-tag {
    color: var(--secondary-color);
}
.tag {
    text-transform: lowercase;
    font-weight: initial;
}
.tag::before {
    content: "#";
}

.no-break {
    white-space: nowrap;
}

a.quiet-link,a.quiet-link:visited {
    color: currentColor;
    text-decoration: inherit;
}

.post-title-bar {
    margin-top: var(--line-height);
    margin-bottom: var(--line-height);
}
.post-title-bar * {
    margin-top: 0;
    margin-bottom: 0;
}

.pagination {
    position: relative;
    text-align: center;
}
.page-prev {
    position: absolute;
    left: var(--character-width);
}
.page-next {
    position: absolute;
    right: var(--character-width);
}

.menu-link {
    float: right;
}

/* Margins hacks to get Navigation to transition correctly */
nav {
    transition: max-height 0.5s;
    overflow-y: hidden;
    max-height: 0;
}
nav > *:first-child {
    margin-top: 0;
}
nav + * {
    margin-top: 0;
}

/* Post CTA */

.gh-post-upgrade-cta {
    font-size: inherit !important;
    font-family: inherit !important;
    letter-spacing: inherit !important;
}
.gh-post-upgrade-cta * {
    font-size: inherit !important;
    font-family: inherit !important;
    letter-spacing: inherit !important;
}
.gh-post-upgrade-cta-content {
    background-color: inherit !important;
    border-radius: 0 !important;
    padding: var(--line-height) var(--character-width) !important;
}
.gh-post-upgrade-cta h2::before {
    content: none;
}
.gh-post-upgrade-cta a.gh-btn {
    border-radius: inherit !important;
    margin: var(--line-height) 0 !important;
    padding: calc(var(--line-height) * 0.5) calc(var(--character-width) * 2) !important;
}
.gh-post-upgrade-cta p {
    margin: 0 !important;
}
.gh-post-upgrade-cta a[data-portal="signin"] {
    color: var(--link-color) !important;
}

/* Ghost editor specifics */

.kg-card {
    border: var(--border-width) solid var(--secondary-color);
    padding: var(--line-height) var(--character-width);
    margin: var(--line-height) 0;
    max-width: 100%;
}
figcaption {
    color: var(--secondary-color);
}
figcaption::before {
    content: "[";
}
figcaption::after {
    content: "]";
}

.kg-width-wide {
    width: 100%;
}
.kg-image-card.kg-width-wide > img {
    width: 100%;
}
.kg-width-full {
    border: none;
    padding: 0;
    width: calc(calc(100% + calc(var(--character-width) * 2)) - 2 * var(--border-width));
    max-width: calc(calc(100% + calc(var(--character-width) * 2)) - 2 * var(--border-width));
    margin-left: calc(var(--border-width) + calc(-1 * var(--character-width)));
    overflow: hidden;
}
.kg-image-card.kg-width-full > img {
    width: 100%;
}
.kg-image-card.kg-width-full > figcaption {
    margin-left: var(--character-width);
    padding: var(--line-height) var(--character-width) 0 var(--character-width);
}

.kg-image-card {
    display: inline-block;
    padding: 0;
    margin-top: 0;
    margin-bottom: 0;
}
.kg-image-card > figcaption {
    padding: var(--line-height) var(--character-width);
}

.kg-gallery-container {
    width: 100%;
    display: flex;
    flex-direction: column;
    margin-bottom: 2px; /* Hack - spacing weird otherwise */
}
.kg-gallery-row {
    display: flex;
    flex-direction: row;
    justify-content: center;
}
.kg-gallery-row:not(:first-of-type) {
    margin: var(--line-height) 0 0 0;
}
.kg-gallery-image:not(:first-of-type) {
    margin: 0 0 0 var(--character-width);
}
.kg-gallery-image > img {
    width: 100%;
    height: 100%;
}

.kg-embed-card {
    border: none;
    padding: 0;
    margin-left: auto;
    margin-right: auto;
}
.kg-embed-card > iframe {
    max-width: 100%;
}

.kg-bookmark-card {
    width: 100%;
    position: relative;
}

.kg-bookmark-container {
    display: flex;
    flex-wrap: wrap;
    flex-direction: row-reverse;
    font-family: inherit;
    text-decoration: none;
}
a.kg-bookmark-container {
    color: currentColor;
}

.kg-bookmark-content {
    flex-basis: 0;
    flex-grow: 999;
    order: 1;
    margin-right: var(--character-width);
}

.kg-bookmark-title {
    font-weight: bold;
    color: var(--accent-color);
}
.kg-bookmark-title::before {
    content: "#";
    padding-right: var(--character-width);
}

.kg-bookmark-metadata,
.kg-bookmark-description {
    margin-top: var(--line-height);
}

.kg-bookmark-metadata {
    align-items: center;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    color: var(--link-color);
    text-decoration: underline;
}

.kg-bookmark-description {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
    overflow: hidden;
}

.kg-bookmark-icon {
    display: inline-block;
    height: var(--line-height);
    width: auto;
    vertical-align: text-bottom;
    margin-right: var(--character-width);
}

.kg-bookmark-thumbnail {
    display: flex;
    flex-basis: 24rem;
    flex-grow: 1;
    max-width: calc(var(--line-height) * 6);
    max-height: calc(var(--line-height) * 6);
    border: var(--border-width) solid var(--secondary-color);
}

.kg-bookmark-thumbnail img {
    max-width: 100%;
    vertical-align: bottom;
    object-fit: cover;
}

.kg-bookmark-publisher::before {
    content: " - ";
}

.kg-bookmark-author {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
}

.author-info {
    display: grid;
    grid-template-columns: calc(var(--line-height) * 3) 1fr;
    grid-gap: var(--character-width);
}

.author-profile-image {
    border: var(--border-width) solid var(--secondary-color);
    max-height: calc(var(--line-height) * 3);
}

.author-meta > * {
    margin-top: 0;
    margin-bottom: 0;
}